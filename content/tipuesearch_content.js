var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n', 'tags': '', 'url': 'Brython.html'}, {'title': '每周進度', 'text': '', 'tags': '', 'url': '每周進度.html'}, {'title': 'W1', 'text': '中秋節放假 \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '說明 2022 Fall 與計算機程式及電腦輔助設計與實習課程的相關規劃與期程安排.及如何設定ipv6 \n \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '\n 透過 mdecad2022 的 organization 建立個人可以管理的倉儲 (名稱為 site-Github_帳號). \n 利用 replit 帳號所啟動的動態網站進行內容管理. \n 將動態網站內容轉為靜態網站內容之後, 設法與 Github 倉儲同步. \n \n 雲端版 \xa0 \n 登入 github (靜態網站) \xa0 \n 登入 replit (雲端動態網站)  建立帳號 \n 登入mail2000並申請帳號   https://mail.nfu.edu.tw \xa0 (學號@nfu.edu.tw) \xa0 \n 登入 Onedrive (需要 5TB 儲存資料, Teams 與 Meet 上課)   \n ----- \xa0 \n 近端版 \xa0 \n 下載 \n Siemens NX 2027 (高階 MCAD) \xa0 \n Solvespace (有原始碼的參數式繪圖軟體) \xa0 \n CoppeliaSim \xa0 \n 可攜 Python \xa0 \n 可攜 MSYS1 \xa0 \n \n \xa0 \n \xa0\xa0 \xa0 \n \xa0 \n \xa0 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': '1.下載可攜系統, 建立 exam.cycu.org 考試帳號 \n 2.Replit 執行動態網站, 如何與 Github 倉儲同步\xa0 \n 3.近端可攜環境準備 \n 4.cmsimde 改版, Replit 套用新倉儲版本 \n 5.ipv6網路設定 \n 6.進入 exam.cycu.org 測試能不能考試 \n \n \n \n w4_cad2a \n 2022-09-30 14:08:28 \n 2022-10-01 14:08:28 \n 168.000 / 200.000 (84%) \n \n \n \n \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '講解如何在 stud.cycu.org Ubuntu 伺服器上執行動態網站, 如何將改版的靜態網頁推向 Github Pages \n 上課筆記 \n 1.查看登入 stud.cycu.org 伺服器的帳號密碼, 帳號為 cad+學號, 密碼為四個字元, 包括數字與小寫英文字母 。 \n 2. 請到 excel 檔案 \xa0 查詢 \xa0 stud.cycu.org 中與帳號對應的近端 埠號 。 \n 3. 修改可攜 Python 3.10.6 start.bat, 蓋掉第三行後重新啟動 。 \n 4. 重新啟動可攜程式環境, 在其中一個命令列, ssh\xa0 \xa0 cad+學號@stud.cycu.org 。 \n 5. 在 ssh 登入畫面, 以 ssh-keygen 建立 key pairs, .ssh/id_rsa 為 private key, id_rsa.pub 為 public key   。 \n 6. 設法利用 Filezilla, 以 sftp 安全的檔案傳輸協定, 與 stud.cycu.org 伺服器連結 。 \n 7. 利用\xa0 Filezilla sftp 取下 id_rsa.pub, 登錄至 Github 帳號下的 Setting - >\xa0 SSH and GPG key 。 \n 8. 下載\xa0 \xa0 config \xa0 設定檔案,\xa0 以 sftp 放入 stud.cycu.org 主機的 .ssh 目錄中。 \n 9. 設定 .gitconfig, 總共包含三項設定: git config --global user.name "scrum-1", git config --global user.email\xa0 "scrum1@mde.tw"\xa0\xa0 以及 git config --global http.proxy http://p42.cycu.org:3128, 這三個設定必須在 ssh 登入畫面中執行, 設定完成檔案會存入帳號根目錄中的 .gitconfig   。 \n 10.  利用 git clone --recurse-submodules\xa0 \xa0 git@demo:mdecad2022/site-scrum-1.git \xa0 demo \n 11.  下載 \xa0 server.py , 在 Windows 編輯 \xa0 server.py , 將個人分配到的 9xxxx 埠號填入後存檔, 以 sftp 放入上列取下的倉儲根目錄。 \n 12. 入\xa0 Ubuntu 後, 會使用的指令: pwd 代表 print working directory, clear -\xa0 清除螢幕, cd - 更換目錄, ls -l 列出目錄詳細內容, chmod u+x \xa0 acp \xa0 表示讓 user 可以 execute acp script (能夠讓使用者以 source acp 加上提交字串進行 git add, git commit, git push, 如何在 Windows 執行 acp.bat 加上提交字串。 \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '試著照著老師拍的影片，自己在 stud.cycu.org 執行動態網站  \xa0 \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '根據學生的問題，進行講解並錄影。 \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '進入 https://exam.cycu.org/ 考試 \n \n \n \n w8_cad2a \n 2022-10-28 13:40:00 \n 2022-10-28 14:00:00 \n 72.000 / 100.000 (72%) \n \n \n \n \n \n \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '', 'tags': '', 'url': 'W9.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': 'h2', 'text': '已知  block.prt  中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案. \n /downloads/41023118.stl \n', 'tags': '', 'url': 'h2.html'}, {'title': 'W11', 'text': '運動會停課 \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '', 'tags': '', 'url': 'W12.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w11', 'text': '', 'tags': '', 'url': 'w11.html'}]};